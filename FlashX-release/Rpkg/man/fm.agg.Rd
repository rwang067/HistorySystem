% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FlashR.R
\name{fm.agg}
\alias{fm.agg}
\alias{fm.agg.lazy}
\alias{fm.agg.mat}
\alias{fm.agg.mat.lazy}
\title{Aggregation on a FlashR object.}
\usage{
fm.agg(fm, op)

fm.agg.lazy(fm, op)

fm.agg.mat(fm, margin, op)

fm.agg.mat.lazy(fm, margin, op)
}
\arguments{
\item{fm}{a FlashR object}

\item{op}{the reference or the name of a predefined basic operator or
the reference to an aggregation operator returned by
\code{fm.create.agg.op}.}

\item{margin}{the subscript which the function will be applied over.}
}
\value{
\code{fm.agg} returns a scalar, \code{fm.agg.mat} returns
        a FlashR vector, \code{fm.agg.lazy} and \code{fm.agg.mat.lazy}
        return a FlashR sink matrix.
}
\description{
This function accepts a basic operator and perform aggregation on
the FlashR object with the basic operator.
}
\details{
\code{fm.agg} aggregates over the entire object.

\code{fm.agg.lazy} aggregates over the entire object, but it performs
aggregation lazily.

\code{fm.agg.mat} aggregates on the rows or columns of a matrix. It performs
aggregation on the shorter dimension lazily, but on the longer dimension
immediately.

\code{fm.agg.mat.lazy} aggregates on the rows or columns of a matrix and
performs aggregation lazily regardless the dimension.
}
\examples{
mat <- fm.runif.matrix(100, 2)
res <- fm.agg(mat, "+")
res <- fm.agg(mat, fm.bo.add)
sum <- fm.create.agg.op(fm.bo.add, fm.bo.add, "sum")
res <- fm.agg(mat, sum)
res <- fm.agg.mat(mat, 1, sum)
}

